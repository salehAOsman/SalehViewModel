@*5 we create view for index method but we select List as template
    and Person Class as Model for that we have this EEnum<Person>*@
@*we need to create many methods for this view as create and details and edit and delete and search-->6*@
@*when we need to create search active over "Index View " then we create it before table list and after "Creat new" *@
@model IEnumerable<SalehViewModel.Models.Person>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<!--we will add here search form as post to input info inside post method then
    we will display it again by new object but with same "Index method [Get]" 
    and we have to return object instead of empty and we will add new post method call it "Index"   -->
@using (Html.BeginForm("Index","Home",FormMethod.Post))
{
<div class="form-horizontal">
    <!--start div for begin form-->
    @Html.ValidationSummary(true, " ", new { @class = "text-danger" })<!--This used for validation but we need for each element-->
    <div class="form-group">
        <!-- property -->
        <div class="col-md-3 ">
            <!--it must be name of input same input in method post "name="searchTxt" "-->
            <input type="text" name="searchTxt" value="" placeholder="input seraching" />        @*It relates this single validation with validationSummary*@
        </div>
        <div class="col-md-4">
            <!-- It needs "name="****" " of input element to compare this value in the method 
                we use property to be by default checked -->
            <a>by City</a><input type="checkbox" name="City" value="city" class="btn btn-default" checked/>
            <input type="submit" value="Search" class="btn btn-default" />
        </div>
    </div>
</div>
}  @*end search form*@


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th></th>
    </tr>
 @if (Model!=null)
   {

        foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(Model => item.Id)
              <!--we change because we have search active to 
              this new code "@*@tml.DisplayFor(Model => item.Name)*@" instead of @* @Html.DisplayFor(modelItem => item.Name)*@-->
            </td>
            @*<td>
                @Html.DisplayFor(Model => item.Id)
            </td>*@
            <td>
                @Html.DisplayFor(Model => item.Name)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>*@
            <td>
                @Html.DisplayFor(Model => item.City)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.City)
            </td>*@
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
        }
   }

</table>
